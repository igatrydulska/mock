
//setting the variables for weather
let weatherjson = false;
let day = 1;
let month = 12;
let year = 2022;
let currentDate = 27-11-2022;
let url;


let img;
let img1;

img = loadImage('niebo.jpg');
img1 = loadImage('niebo2.jpg');



//ensuring that both the picture and the weather API run smoothly; 
//creating a source for the weather API data

function preload() { // Calling loadJSON() inside preload() guarantees to complete the operation before setup() and draw() are called.
  var date = new Date();
  let day = String(date.getDate()-5);
  let month = String(date.getMonth() + 1);
  let year = date.getFullYear();
  let currentDate = `${year}-${month}-${day}`;
  let newUrl = "https://archive-api.open-meteo.com/v1/era5?latitude=51.5002&longitude=-0.1262" //Barcelona's localisation is 41.3874° N, 2.1686° E
  newUrl += `&start_date=${currentDate}&end_date=${currentDate}&daily=temperature_2m_max&timezone=auto`
  weatherjson = loadJSON(newUrl);
}

//creating default set-up
  


function setup() {
  createCanvas(displayWidth, displayHeight);
  //background(10) //I think this is what was blocking pictures
  setInterval(preload, 1000 * 60 * 60 * 24); //update the weather every day
  img = loadImage('niebo.jpg');
  img1 = loadImage('niebo2.jpg');
}

//setting new variables - for display
let constant = 2;
let temp = weatherjson.daily.temperature_2m_max;
let temp2 = Number(temp);


function draw() {
  background(10);
  if (weatherjson === false) return;
  let constant = 2;
  let temp = weatherjson.daily.temperature_2m_max;
  let temp2 = Number(temp); // this will be the variable on which the brightness of the picture of the left will depend on
  temp2 = int(random(temp2+2, temp2+6)); // this will be the variable on which the brightness of the picture on the right will depend on;
  // 2 and 6 because this is the prognosis for the air temperature rise in Barcelona is the interval 2 - 6;
  img1.loadPixels();
  //creating the for loop, so that the change is constant
  for (let x = 0; x < img1.width; x++) {
    for (let y = 0; y < img1.height; y++) {
      // Calculate the 1D location from a 2D grid
      let loc = (x + y * img1.width)*4;
      //I wanted to use the brightness function initially, however I noticed that it is unpredicatble with objects;
      //I decided to work on each RBG value separately
      let r, g, b;
      r = img1.pixels[loc];
      g = img1.pixels[loc + 1];
      b = img1.pixels[loc + 2];
      r += Number(temp)*2.05;
      g += Number(temp)*2.05;
      b += Number(temp)*2.05;
      //constraining RGB to make sure they are within the color range (0-255)
      r = constrain(r, 0, 255);
      g = constrain(g, 0, 255);
      b = constrain(b, 0, 255);
      let c = color(r, g, b);
      img1.set(x,y,c);

    }
  }
  img1.updatePixels();

  image(img, 130, 200, 400, 400);
  image(img1, 760, 200, 400, 400);
}


